{"version":3,"sources":["components/Counter.js","store/actionCreator.js","store/actionTypes.js","components/App.js","store/reducer.js","index.js"],"names":["mapDispatchToProps","deleteCounter","payload","type","increment","decrement","resetCounter","increaseRange","decreaseRange","connect","state","id","counter","filter","el","Fragment","className","range","map","v","onClick","key","reverse","currentValue","addCounter","resetAllCounters","counters","createCounter","uuid","length","push","pop","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a437d20c.chunk.js","sourcesContent":["import React from \"react\";\nimport {connect} from 'react-redux';\nimport {decreaseRange, decrement, deleteCounter, increaseRange, increment, resetCounter} from \"../store/actionCreator\";\n\nconst Counter = ({state, id, deleteCounter, increment, decrement, resetCounter, increaseRange, decreaseRange}) => {\n\n    const counter = state.filter(el => el.id === id)[0];\n\n    const plusButtons = () => counter.range.map(v => {\n        return <button className=\"btn btn-outline-info\" onClick={() => increment({id, v})} key={`+${v}`}>+{v}</button>;\n    });\n\n    const minusButtons = () => counter.range.map(v => {\n        return <button className=\"btn btn-outline-info\" onClick={() => decrement({id, v})} key={`-${v}`}>-{v}</button>;\n    }).reverse();\n\n    return (\n        <React.Fragment>\n            <div className=\"counter\">\n                <div className=\"btn-group\">\n                    {minusButtons()}\n                </div>\n                <span>{counter.currentValue}</span>\n                <div className=\"btn-group\">\n                    {plusButtons()}\n                </div>\n                <br/>\n                <button className=\"btn btn-secondary btn-sm m-3\" onClick={() => decreaseRange(id)}>\n                    <i className=\"fa fa-minus-circle\"/></button>\n                Range\n                <button className=\"btn btn-secondary btn-sm m-3\" onClick={() => increaseRange(id)}>\n                    <i className=\"fa fa-plus-circle plus\"/></button>\n                <br/>\n                <div className=\"btn-group\">\n                    <button className=\"btn btn-info\" onClick={() => resetCounter(id)}>Reset</button>\n                    <button className=\"btn btn-secondary\" onClick={() => deleteCounter(id)}>Delete</button>\n                </div>\n            </div>\n            <br/>\n        </React.Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({state});\nconst mapDispatchToProps = {deleteCounter, increment, decrement, resetCounter, increaseRange, decreaseRange};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","import {\n    ACTION_ADD_COUNTER,\n    ACTION_DECREASE_RANGE,\n    ACTION_DECREMENT,\n    ACTION_DELETE_COUNTER,\n    ACTION_INCREASE_RANGE,\n    ACTION_INCREMENT,\n    ACTION_RESET_ALL_COUNTERS,\n    ACTION_RESET_COUNTER\n} from \"./actionTypes\";\n\nexport const addCounter = () => ({type: ACTION_ADD_COUNTER});\nexport const deleteCounter = (payload) => ({type: ACTION_DELETE_COUNTER, payload});\nexport const increment = (payload) => ({type: ACTION_INCREMENT, payload});\nexport const decrement = (payload) => ({type: ACTION_DECREMENT, payload});\nexport const resetCounter = (payload) => ({type: ACTION_RESET_COUNTER, payload});\nexport const resetAllCounters = () => ({type: ACTION_RESET_ALL_COUNTERS});\nexport const increaseRange = (payload) => ({type: ACTION_INCREASE_RANGE, payload});\nexport const decreaseRange = (payload) => ({type: ACTION_DECREASE_RANGE, payload});","export const ACTION_ADD_COUNTER = 'ADD_COUNTER';\nexport const ACTION_DELETE_COUNTER = 'DELETE_COUNTER';\nexport const ACTION_INCREMENT = 'INCREMENT';\nexport const ACTION_DECREMENT = 'DECREMENT';\nexport const ACTION_RESET_COUNTER = 'RESET_COUNTER';\nexport const ACTION_RESET_ALL_COUNTERS = 'RESET_ALL_COUNTERS';\nexport const ACTION_INCREASE_RANGE = 'INCREASE_RANGE';\nexport const ACTION_DECREASE_RANGE = 'DECREASE_RANGE';","import React from \"react\";\nimport Counter from \"./Counter\";\nimport {connect} from 'react-redux';\nimport {addCounter, resetAllCounters} from \"../store/actionCreator\";\n\nconst App = ({state: counters, addCounter, resetAllCounters}) => {\n\n    const getCounters = () => {\n        return counters.map(({id}) => <Counter key={id} id={id}/>);\n    };\n\n    return (\n        <div>\n            <h2>Counters</h2>\n            {getCounters()}\n            <button className=\"btn btn-info mr-3\" onClick={addCounter}>Add Counter</button>\n            <button className=\"btn btn-secondary\" onClick={resetAllCounters}>Reset All</button>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => ({state});\nconst mapDispatchToProps = {addCounter, resetAllCounters};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {v4 as uuid} from 'uuid';\nimport {\n    ACTION_ADD_COUNTER,\n    ACTION_DECREASE_RANGE,\n    ACTION_DECREMENT,\n    ACTION_DELETE_COUNTER,\n    ACTION_INCREASE_RANGE,\n    ACTION_INCREMENT,\n    ACTION_RESET_ALL_COUNTERS,\n    ACTION_RESET_COUNTER\n} from \"./actionTypes\";\n\nexport const reducer = (state = [createCounter()], action) => {\n    switch (action.type) {\n        case ACTION_ADD_COUNTER:\n            return addCounter(state);\n        case ACTION_DELETE_COUNTER:\n            return deleteCounter(state, action.payload);\n        case ACTION_INCREMENT:\n            return increment(state, action.payload);\n        case ACTION_DECREMENT:\n            return decrement(state, action.payload);\n        case ACTION_RESET_COUNTER:\n            return resetCounter(state, action.payload);\n        case ACTION_RESET_ALL_COUNTERS:\n            return resetAllCounters(state);\n        case ACTION_INCREASE_RANGE:\n            return increaseRange(state, action.payload);\n        case ACTION_DECREASE_RANGE:\n            return decreaseRange(state, action.payload);\n        default:\n            return state;\n    }\n};\n\nconst createCounter = () => ({\n        id: uuid(),\n        currentValue: 0,\n        range: [1, 2, 3]\n    }\n);\n\nconst addCounter = state => [...state, createCounter()];\n\nconst deleteCounter = (state, id) => {\n    return state.filter((counter) => counter.id !== id);\n};\n\nconst increment = (state, payload) => {\n    return state.map(counter => {\n        if (counter.id === payload.id) {\n            counter.currentValue += payload.v;\n        }\n        return counter;\n    })\n};\n\nconst decrement = (state, payload) => {\n    return state.map(counter => {\n        if (counter.id === payload.id) {\n            counter.currentValue -= payload.v;\n        }\n        return counter;\n    })\n};\n\nconst resetCounter = (state, id) => {\n    return state.map(counter => {\n        if (counter.id === id) {\n            counter.currentValue = 0;\n        }\n        return counter;\n    })\n};\n\nconst resetAllCounters = state => state.map(counter => {\n    counter.currentValue = 0;\n    return counter;\n});\n\nconst increaseRange = (state, id) => state.map(counter => {\n    if (counter.id === id) {\n        if (counter.range.length < 10) {\n            counter.range.push(counter.range.length + 1);\n        }\n    }\n    return counter;\n});\n\nconst decreaseRange = (state, id) => state.map(counter => {\n    if (counter.id === id) {\n        if (counter.range.length > 1) {\n            counter.range.pop();\n        }\n    }\n    return counter;\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./components/App\";\nimport {Provider} from 'react-redux'\nimport {createStore} from \"redux\";\nimport {reducer} from './store/reducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}